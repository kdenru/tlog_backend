// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  admin
  nikita
  survivor
}

model User {
  id       Int      @id @default(autoincrement())
  username String   @unique
  password String
  role     UserRole @default(survivor)

  taps      Tap[]
  userStats UserStat[]
}

model Round {
  id          String   @id @default(uuid())
  createdAt   DateTime @default(now())
  startAt     DateTime
  endAt       DateTime
  totalPoints Int      @default(0)

  taps      Tap[]
  userStats UserStat[]
}

model Tap {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  roundId   String
  round     Round    @relation(fields: [roundId], references: [id])
  points    Int

  @@index([userId])
  @@index([roundId])
}

model UserStat {
  id       String @id @default(uuid())
  userId   Int
  user     User   @relation(fields: [userId], references: [id])
  roundId  String
  round    Round  @relation(fields: [roundId], references: [id])
  tapCount Int    @default(0)
  points   Int    @default(0)

  @@unique([userId, roundId])
  @@index([userId])
  @@index([roundId])
}
